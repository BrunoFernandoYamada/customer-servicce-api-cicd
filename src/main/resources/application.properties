spring.application.name=customer-service-api
server.port=8087

##Database
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/customer
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.platform=postgres
spring.database.driverClassName=org.postgresql.Driver


##[FLYWAY] [step 2] flyway config
spring.flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://host.docker.internal:5432
flyway.schemas=customer

##actuator
management.endpoints.web.exposure.include=info, health, metrics, prometheus
management.info.env.enabled = true
info.app.name=customer-service-api
info.app.description=API responsible to manage customer services
info.app.created=2021-12-24

##[SLACK] [step 2] slack config url
slack.webhooks-url=${SLACK_URL}

##[KAFKA - AVRO] [step 6] kafka config
kafka.broker-url=localhost:9092
kafka.customer.topic=customer.topic
kafka.customer.group-id=customer.service.api
kafka.offset.latest=latest
kafka.offset.earliest=earliest
kafka.schema-registry.url=http://0.0.0.0:8081